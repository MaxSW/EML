/* 1. NUMERICAL VARIABLES AND MATHS */
print("== 1 ==")
var a = 5
print(a)
var b = (a + 5)^2 - 10/4
print(b)
b++
print(b)
b--
print(b)
b += a
print(b)
b -= (5 * 2)
print(b)
b *= 2
print(b)
b /= b
print(b)

/* 2. STRINGS AND BOOLEANS */
print("== 2 ==")
str d = "ten"
print(d)
str e = d + " 5 " + d
print(e)
e = "eleven"
print(e)
bool f = true
print(f)
f = false
print(f)
f = e == d
print(f)
f = e != d
print(f)
e = "ten"
f = e == d
print(f)
f = e != d
print(f)
var g = 5
var h = 10
bool f = g == h
print(f)
bool f = g > h
print(f)
f = g < h
print(f)
print(g >= h)
print(g <= h)
var g = 10
print(h > g)
print(h < g)
print(h == g)
print(h != g)
print(h >= g)
print(h <= g)

/* 3. FUNCTIONS AND CLASSES */
print("==3==")
func i = (){
	print("a!")
}
i()
func j = (var a, str b, bool c){
	print(a, b, c)
}
j(1+3+5, "yes"+" no", 5==4)

func add = (var a, var b){
	return (a + b)
}

//print(add(2,3))

func ttt = (){
	print("hello")
	return
	print("world")
}

ttt()

class k = (var a){
	print(a)
	var b = 10 + a
	func d = (str s){
		print(s)
	}
}

obj l = new k(5)
print(l.b)
l.d("yes")

obj m = {}
m.a = 7
print(m.a)

/* 4. ARRAYS */
print("==4==")
arr x = []
x[0] = 5
print(x[0])
x[x[0]] = 5 - 2
print(x[x[0]])

/* 5. LOGIC */ 
print("==5==")
if(true){
	print("1")
}else if(false){
	print("2")
}else{
	print("3")
}

if(false){
	print("4")
}else if(true){
	print("5")
}else{
	print("6")
}

if(false){
	print("7")
}else if(false){
	print("8")
}else{
	print("9")
}

for(var i = 0; i < 100; i++){
	if(i > 10){
		continue
	}
	print(i)
}

while(true){
	print("hello")
	break
}

/* 6. linear algebra */
print("==6==")
var aa = 5
vec ab = [aa, aa *2, 3]
print(ab)

print(ab + [2, 3, 4])
print(5 * ab)
print(ab - [1, 1, 0])

mat ac = [aa, 2 | 3, 1]
print(ac)
print(ac + [1, 1| 0, 2])
print(5 * ac)
print(ac * [1, 0 | 0, 1])
print(ac * [3, -1 | 2, -4])

/* 7. definitions */
print("==7==")
var ad = 5
var :ae = 10 + ad
print(ae)
ad = 10
print(ad)

bool :af = ad == 10
print(af)
ad = 100
print(af)

str ag = "hello"
str :ah = ag + " world"
print(ah)
ag = "goodbye"
print(ah)

vec :ai = [ad, 5, 3]
print(:ai)
ad = 10
print(:ai)

mat :aj = [ad, 2| -ad, 1 -ad]
print(aj)
ad = 5
print(aj)